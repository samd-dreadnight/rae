{"version":3,"sources":["components/Console/OutputInjector.jsx","components/Console/InputLine.jsx","Objects/CommandList.js","Objects/Commands.js","components/App.jsx","Objects/CommonFunctions.js","index.js"],"names":["OutputInjector","props","output","InputLine","action","autoComplete","onSubmit","submit","class","for","type","id","value","onChange","change","Commands","Name","Description","Examples","Example","outputLines","App","useState","input","setInput","setOutputLines","Nav","defaultActiveKey","as","Item","Link","href","Row","Col","xs","Container","fluid","className","map","line","index","event","target","preventDefault","i","cleanedInput","foo","split","join","toLowerCase","forEach","command","push","example","invalidInput","console","log","processInput","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAQeA,MANf,SAAwBC,GACpB,OACI,4BAAIA,EAAMC,UCUHC,MAZf,SAAmBF,GAEf,OACI,8BACI,uBAAMG,OAAO,IAAIC,aAAa,MAAMC,SAAUL,EAAMM,OAApD,UACI,uBAAOC,MAAM,WAAWC,IAAI,WAA5B,gCACA,uBAAOD,MAAM,YAAYE,KAAK,OAAOC,GAAG,WAAWC,MAAOX,EAAMW,MAAOC,SAAUZ,EAAMa,eCPvG,IA2BeC,EA3BE,CACb,CACIC,KAAM,OACNC,YAAa,+DACbC,SAAU,CAAC,CACPF,KAAM,aACNG,QAAS,UAGjB,CACIH,KAAM,OACNC,YAAa,sDACbC,SAAU,CAAC,CACPF,KAAM,aACNG,QAAS,UAGjB,CACIH,KAAM,MACNC,YAAa,qBACbC,SAAU,CAAC,CACPF,KAAM,aACNG,QAAS,UCrBjBC,EAAc,G,MCqFHC,MAzEf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsCF,mBAAS,CAAC,wCAAhD,mBAAOF,EAAP,KAAoBK,EAApB,KAiCA,OACE,gCAEE,cAACC,EAAA,EAAD,CAAKC,iBAAiB,QAAQC,GAAG,KAAjC,SACE,cAACF,EAAA,EAAIG,KAAL,CAAUD,GAAG,KAAb,SACE,cAACF,EAAA,EAAII,KAAL,CAAUC,KAAK,QAAf,yBAKJ,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,sBAAKzB,GAAG,OAAO0B,UAAU,cAAzB,UACCjB,EAAYkB,KAAI,SAACC,EAAMC,GACtB,OACE,cAAC,EAAD,CAAetC,OAAQqC,OAGzB,cAAC,EAAD,CACEzB,OAnDd,SAAsB2B,GACpBjB,EAASiB,EAAMC,OAAO9B,QAmDVL,OAhDhB,SAAqBkC,GACjBA,EAAME,iBAKV,SAAsBC,GACpB,IAAIC,GC7BcC,ED6BYF,EC5BrBE,EAAIC,MAAM,KAAKC,KAAK,IAAIC,eADnC,IAAoBH,ED8BhB,OAAQD,GACN,IAAK,OACHpB,GD5BJV,EAASmC,SAAQ,SAAAC,GACb/B,EAAYgC,KAAK,uBACjBhC,EAAYgC,KAAZ,mBAA6BD,EAAQnC,OACrCI,EAAYgC,KAAZ,uBAAiCD,EAAQlC,cACzCkC,EAAQjC,SAASgC,SAAQ,SAAAG,GACrBjC,EAAYgC,KAAKC,EAAQrC,MACzBI,EAAYgC,KAAKC,EAAQlC,YAE7BC,EAAYgC,KAAK,0BAEdhC,ICmBH,MAEF,IAAK,OACHK,GDjBJL,EAAYgC,KAAK,6CACVhC,ICiBH,MAEF,IAAK,MACHK,EDfA,CAAC,wCCgBD,MAEF,QACEA,EDdR,SAAsBmB,GAGlB,OAFAxB,EAAYgC,KAAZ,UAAoBR,EAApB,8BACAxB,EAAYgC,KAAK,sCACVhC,ECWYkC,CAAaT,IAC5BU,QAAQC,IAAI,iBArBhBC,CAAalC,GACbC,EAAS,KA8CGZ,MAAOW,WAOb,cAACU,EAAA,EAAD,WE1EVyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.af58ba67.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction OutputInjector(props) {\r\n    return (\r\n        <p>{props.output}</p>\r\n    );\r\n}\r\n\r\nexport default OutputInjector;","import React from 'react';\r\n\r\nfunction InputLine(props) {\r\n\r\n    return (\r\n        <div>\r\n            <form action=\"#\" autoComplete=\"off\" onSubmit={props.submit}>\r\n                <label class=\"inputtag\" for=\"inputbox\">bluedawn@node01:~$</label>\r\n                <input class=\"inputarea\" type=\"text\" id=\"inputbox\" value={props.value} onChange={props.change}></input>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputLine;\r\n","\r\nconst Commands = [\r\n    {\r\n        Name: \"help\",\r\n        Description: \"Lists all available commands with a description and examples\",\r\n        Examples: [{\r\n            Name: \"Example 01\",\r\n            Example: \"help\"\r\n        }]\r\n    },\r\n    {\r\n        Name: \"scan\",\r\n        Description: \"Scans for all available devices on the current VLAN\",\r\n        Examples: [{\r\n            Name: \"Example 01\",\r\n            Example: \"scan\"\r\n        }]\r\n    },\r\n    {\r\n        Name: \"cls\",\r\n        Description: \"Clears the console\",\r\n        Examples: [{\r\n            Name: \"Example 01\",\r\n            Example: \"cls\"\r\n        }]\r\n    }\r\n]\r\n\r\nexport default Commands;","import Commands from './CommandList.js';\r\n\r\nvar outputLines = [];\r\n\r\nfunction help() {\r\n    Commands.forEach(command => {\r\n        outputLines.push(\"-------------------\");\r\n        outputLines.push(`Command: ${command.Name}`);\r\n        outputLines.push(`Description: ${command.Description}`);\r\n        command.Examples.forEach(example => {\r\n            outputLines.push(example.Name);\r\n            outputLines.push(example.Example);\r\n        });\r\n        outputLines.push(\"-------------------\");\r\n    });\r\n    return outputLines;\r\n}\r\n\r\n\r\nfunction scan() {\r\n    outputLines.push(\"The scan command is currently unavailable\")\r\n    return outputLines;\r\n}\r\n\r\n\r\nfunction cls(i) {\r\n    i = [\"RAE Network connected : Type 'help'\"];\r\n    return i;\r\n}\r\n\r\n\r\nfunction invalidInput(i) {\r\n    outputLines.push(`${i} : is not a valid command`);\r\n    outputLines.push(\"Type 'help' for a list of commands\");\r\n    return outputLines;\r\n}\r\n\r\nexport {help, scan, cls, invalidInput};","import React, {useState} from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Nav from 'react-bootstrap/Nav';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport OutputIjector from '../components/Console/OutputInjector';\nimport InputLine from '../components/Console/InputLine';\n\nimport {cleanInput} from '../Objects/CommonFunctions.js';\nimport {help, scan, cls, invalidInput} from '../Objects/Commands.js';\nimport '../css/App.css';\n\n\nfunction App() {\n\n  const [input, setInput] = useState(\"\");\n  const [outputLines, setOutputLines] = useState([\"RAE Network connected : Type 'help'\"]);\n\n  function handleChange(event) {\n    setInput(event.target.value);\n}\n\nfunction submitInput(event) {\n    event.preventDefault();\n    processInput(input);\n    setInput(\"\");\n  }\n\nfunction processInput(i) {\n  var cleanedInput = cleanInput(i);\n    switch (cleanedInput) {\n      case \"help\": \n        setOutputLines(help()); \n        break;\n\n      case \"scan\":\n        setOutputLines(scan());\n        break;\n\n      case \"cls\":\n        setOutputLines(cls(outputLines));\n        break;\n\n      default:\n        setOutputLines(invalidInput(cleanedInput));\n        console.log(\"Triggered!!!\")\n      }\n}\n\n  return (\n    <div>\n\n      <Nav defaultActiveKey=\"/home\" as=\"ul\">\n        <Nav.Item as=\"li\">\n          <Nav.Link href=\"/home\">RAE.net</Nav.Link>\n        </Nav.Item>\n      </Nav>\n\n\n      <Row>\n        <Col xs={8}>\n          <Container fluid>\n            <div id=\"pane\" className=\"consolePane\">\n            {outputLines.map((line, index) => {\n              return (\n                <OutputIjector output={line}/>\n              );\n            })}\n              <InputLine \n                change={handleChange} \n                submit={submitInput}\n                value={input}\n              />\n            </div>\n          </Container>\n        </Col>\n\n\n          <Col>\n          </Col>\n        </Row>\n    </div>\n\n  );\n}\n\nexport default App;\n","\r\nfunction cleanInput(foo) {\r\n    return foo.split(' ').join('').toLowerCase();\r\n}\r\n\r\nexport {cleanInput};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}