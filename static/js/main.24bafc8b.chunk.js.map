{"version":3,"sources":["components/Console/InputLine.jsx","components/Console/OutputInjector.jsx","components/Console/ConsolePane.jsx","Objects/CommandList.js","Objects/Commands.js","components/App.jsx","Objects/CommonFunctions.js","index.js"],"names":["InputLine","props","isFocused","useRef","useEffect","current","focus","action","autoComplete","onSubmit","submit","className","htmlFor","ref","type","autoFocus","id","value","onChange","change","OutputInjector","output","ConsolePane","bottomRef","useState","consoleClicked","setConsoleClicked","scrollIntoView","block","onClick","outputLines","map","line","index","handleChange","submitInput","Commands","Name","Description","Examples","Example","App","input","setInput","setOutputLines","Nav","defaultActiveKey","as","Item","Link","href","Row","Col","xs","Container","fluid","event","target","preventDefault","i","cleanedInput","foo","split","join","toLowerCase","forEach","command","push","example","invalidInput","processInput","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24bafc8b.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nfunction InputLine(props) {\r\n    const isFocused = useRef();\r\n\r\n   useEffect(() => {\r\n    isFocused.current.focus();\r\n   }, [props])\r\n\r\n    return (\r\n        <div>\r\n            <form action=\"#\" autoComplete=\"off\" onSubmit={props.submit}>\r\n                <label className=\"inputtag\" htmlFor=\"inputbox\"><span className=\"prompt-username\">bluedawn</span>@<span className=\"prompt-node\">node01</span>:~$</label>\r\n                <input ref={isFocused} className=\"inputarea\" type=\"text\" autoFocus id=\"inputbox\" value={props.value} onChange={props.change}></input>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputLine;\r\n","import React from 'react';\r\n\r\nfunction OutputInjector(props) {\r\n    return (\r\n        <p>{props.output}</p>\r\n    );\r\n}\r\n\r\nexport default OutputInjector;","import React, { useEffect, useRef, useState } from 'react';\r\nimport InputLine from './InputLine';\r\nimport OutputInjector from './OutputInjector';\r\n\r\nfunction ConsolePane(props) {\r\n  const bottomRef = useRef();\r\n\r\n  const [consoleClicked, setConsoleClicked] = useState(false);\r\n\r\n  function autofocusInput() {\r\n    setConsoleClicked(!consoleClicked);\r\n  }\r\n\r\n  function scrollToBottom() {\r\n    bottomRef.current.scrollIntoView({\r\n      block: \"start\"\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    scrollToBottom()\r\n  }, [props])\r\n\r\n  return (\r\n    <div id=\"pane\" className=\"consolePane\" onClick={autofocusInput}>\r\n    {props.outputLines.map((line, index) => {\r\n      return (\r\n        <OutputInjector key={index} output={line}/>\r\n      );\r\n    })}\r\n      <InputLine\r\n        change={props.handleChange} \r\n        submit={props.submitInput}\r\n        value={props.value}\r\n      />\r\n      <div ref={bottomRef}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConsolePane;","\r\nconst Commands = [\r\n    {\r\n        Name: \"help\",\r\n        Description: \"Lists all available commands with a description and examples\",\r\n        Examples: [{\r\n            Name: \"Example 01\",\r\n            Example: \"help\"\r\n        }]\r\n    },\r\n    {\r\n        Name: \"scan\",\r\n        Description: \"Scans for all available devices on the current VLAN\",\r\n        Examples: [{\r\n            Name: \"Example 01\",\r\n            Example: \"scan\"\r\n        }]\r\n    },\r\n    {\r\n        Name: \"cls\",\r\n        Description: \"Clears the console\",\r\n        Examples: [{\r\n            Name: \"Example 01\",\r\n            Example: \"cls\"\r\n        }]\r\n    }\r\n]\r\n\r\nexport default Commands;","import Commands from './CommandList.js';\r\n\r\nvar outputLines = [];\r\n\r\nfunction help() {\r\n    Commands.forEach(command => {\r\n        outputLines.push(\"-------------------\");\r\n        outputLines.push(`Command: ${command.Name}`);\r\n        outputLines.push(\"-------------------\");\r\n        outputLines.push(`Description: ${command.Description}`);\r\n        command.Examples.forEach(example => {\r\n            outputLines.push(example.Name);\r\n            outputLines.push(example.Example);\r\n            outputLines.push(\":END:\");\r\n        });\r\n    });\r\n    return outputLines;\r\n}\r\n\r\n\r\nfunction scan() {\r\n    outputLines.push(\"The scan command is currently unavailable\")\r\n    return outputLines;\r\n}\r\n\r\n\r\nfunction cls() {\r\n    outputLines = [\"RAE Network connected : Type 'help'\"];\r\n    return outputLines;\r\n\r\n}\r\n\r\n\r\nfunction invalidInput(i) {\r\n    outputLines.push(`${i} : is not a valid command`);\r\n    outputLines.push(\"Type 'help' for a list of commands\");\r\n    return outputLines;\r\n}\r\n\r\nexport {help, scan, cls, invalidInput};","import React, {useState} from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Nav from 'react-bootstrap/Nav';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport ConsolePane from '../components/Console/ConsolePane';\n\nimport {cleanInput} from '../Objects/CommonFunctions.js';\nimport {help, scan, cls, invalidInput} from '../Objects/Commands.js';\nimport '../css/App.css';\n\n\nfunction App() {\n\n  const [input, setInput] = useState(\"\");\n  const [outputLines, setOutputLines] = useState([\"RAE Network connected : Type 'help'\"]);\n\n\n  function handleChange(event) {\n    setInput(event.target.value);\n}\n\n\nfunction submitInput(event) {\n    event.preventDefault();\n    if (input === \"\") {\n      setInput(\" \");\n    } else {\n      setInput(\"\");\n    }\n    processInput(input);\n  }\n\n\nfunction processInput(i) {\n  var cleanedInput = cleanInput(i);\n  switch (cleanedInput) {\n    case \"help\": \n      setOutputLines(help());\n      break;\n\n    case \"scan\":\n      setOutputLines(scan());\n      break;\n\n    case \"cls\":\n      setOutputLines(cls());\n      break;\n\n    default:\n      setOutputLines(invalidInput(cleanedInput));\n  }\n  \n}\n\n  return (\n    <div>\n\n      <Nav defaultActiveKey=\"/home\" as=\"ul\">\n        <Nav.Item as=\"li\">\n          <Nav.Link href=\"/home\">RAE.net</Nav.Link>\n        </Nav.Item>\n      </Nav>\n\n      <Row>\n        <Col xs={8}>\n          <Container fluid>\n          <ConsolePane\n            outputLines={outputLines}\n            handleChange={handleChange}\n            submitInput={submitInput}\n            value={input}\n          />\n          </Container>\n        </Col>\n\n          <Col>\n          </Col>\n        </Row>\n    </div>\n\n  );\n}\n\nexport default App;\n","\r\nfunction cleanInput(foo) {\r\n    return foo.split(' ').join('').toLowerCase();\r\n}\r\n\r\nexport {cleanInput};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}